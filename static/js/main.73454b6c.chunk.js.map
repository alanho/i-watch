{"version":3,"sources":["constants/ActionTypes.js","constants/PartNumbers.js","reducers/partNumbers.js","reducers/index.js","reducers/shops.js","reducers/isLoading.js","configureStore.js","components/PartRow.js","components/AvailabilityGrid.js","containers/AvailabilityGrid.js","components/App.js","actions/index.js","containers/App.js","containers/Root.js","registerServiceWorker.js","index.js"],"names":["FETCH_BEGIN","FETCH_SUCCESS","IPAD","APPLE_WATCH","ALL_PART_NUMBERS","_ALL_PART_NUMBERS","Object","defineProperty","MODEL_REGEXP","_MODEL_REGEXP","rootReducer","combineReducers","partNumbers","state","arguments","length","undefined","action","type","nextState","objectSpread","stores","data","product","forEach","store","availabilities","_","transform","partsAvailability","list","availability","partNumber","row","_matches$groups","exec","storePickupProductTitle","groups","model1","connectivity","size","model2","storage","color","concat","storeNumber","pickupDisplay","push","merge","all","toConsumableArray","shops","reduce","obj","storeName","isLoading","loggerMiddleware","createLogger","PartRow","_ref","model","shopKeys","sizes","react_default","a","createElement","Table","Body","map","connectivities","parts","Row","keys","Cell","rowSpan","acc","v","k","acc2","v2","k2","shopKey","key","textAlign","Icon","name","AvailabilityGrid","products","Grid","Column","celled","structured","Header","HeaderCell","colSpan","components_PartRow","connect","ownProps","App","this","props","onActivate","Container","as","icon","inverted","Divider","Loader","content","active","containers_AvailabilityGrid","Component","fetchBegin","types","fetchSuccess","preloadedState","dispatch","each","productPartNumbers","chunk","params","idx","encodeURIComponent","join","fetch","then","response","json","body","fetchAvailability","createStore","applyMiddleware","thunkMiddleware","Root","es","containers_App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","Root_Root","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.73454b6c.chunk.js","sourcesContent":["export const FETCH_BEGIN = 'FETCH_BEGIN'\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\nexport const FETCH_FAILURE = 'FETCH_FAILURE'\n","export const IPAD = \"iPad\";\nexport const APPLE_WATCH = \"Apple Watch\";\nexport const ALL_PART_NUMBERS = {\n  [IPAD]: [\n    // 11\"\n    'MTXP2ZP/A',\n    'MTXR2ZP/A',\n    'MTXU2ZP/A',\n    'MTXW2ZP/A',\n    'MU222ZP/A',\n    'MU1M2ZP/A',\n    'MU172ZP/A',\n    'MU0U2ZP/A',\n    'MTXN2ZP/A',\n    'MTXQ2ZP/A',\n    'MTXT2ZP/A',\n    'MTXV2ZP/A',\n    'MU1V2ZP/A',\n    'MU1F2ZP/A',\n    'MU102ZP/A',\n    'MU0M2ZP/A',\n    // 12.9\"\n    'MTEM2ZP/A',\n    'MTFN2ZP/A',\n    'MTFQ2ZP/A',\n    'MTFT2ZP/A',\n    'MTJV2ZP/A',\n    'MTJJ2ZP/A',\n    'MTHP2ZP/A',\n    'MTJ62ZP/A',\n    'MTEL2ZP/A',\n    'MTFL2ZP/A',\n    'MTFP2ZP/A',\n    'MTFR2ZP/A',\n    'MTJP2ZP/A',\n    'MTJD2ZP/A',\n    'MTHV2ZP/A',\n    'MTHJ2ZP/A',\n  ],\n  [APPLE_WATCH]: [\n    'MU642ZP/A',\n    'MU6A2ZP/A',\n    'MTVR2ZP/A',\n    'MTVA2ZP/A',\n    'MU682ZP/A',\n    'MTVG2ZP/A',\n    'MTVW2ZP/A',\n    'MU6F2ZP/A',\n    'MU662ZP/A',\n    'MTVD2ZP/A',\n    'MTVU2ZP/A',\n    'MU6D2ZP/A',\n    'MU652ZP/A',\n    'MU6C2ZP/A',\n    'MTVT2ZP/A',\n    'MTVC2ZP/A',\n    'MU692ZP/A',\n    'MU6G2ZP/A',\n    'MTVX2ZP/A',\n    'MTVH2ZP/A',\n    'MU672ZP/A',\n    'MTVF2ZP/A',\n    'MTVV2ZP/A',\n    'MU6E2ZP/A',\n  \n    'MTVJ2ZP/A',\n    'MTX02ZP/A',\n    'MTVN2ZP/A',\n    'MTX42ZP/A',\n    'MTX22ZP/A',\n    'MTVL2ZP/A',\n    'MTVK2ZP/A',\n    'MTX12ZP/A',\n    'MTVQ2ZP/A',\n    'MTX52ZP/A',\n    'MTVM2ZP/A',\n    'MTX32ZP/A',\n  \n    // Nike+\n    'MU6H2ZP/A',\n    'MU6K2ZP/A',\n    'MTXK2ZP/A',\n    'MTX62ZP/A',\n    'MU6J2ZP/A',\n    'MU6L2ZP/A',\n    'MTXM2ZP/A',\n    'MTXG2ZP/A',\n    'MU7F2ZP/A',\n    'MTXF2ZP/A',\n    'MTXJ2ZP/A',\n    'MU7H2ZP/A',\n    'MU7G2ZP/A',\n    'MU7J2ZP/A',\n    'MTXL2ZP/A',\n    'MTXH2ZP/A',\n  \n    //hermēs'\n    'MU7L2ZP/A',\n    'MU732ZP/A',\n    'MU782ZP/A',\n    'MU702ZP/A',\n    'MU722ZP/A',\n    'MU712ZP/A',\n    'MU772ZP/A',\n    'MU6Y2ZP/A',\n    'MU762ZP/A',\n    'MU9E2ZP/A',\n    'MU752ZP/A',\n    'MU742ZP/A',\n  ]\n}\n\n\n","import {\n  FETCH_BEGIN,\n  FETCH_SUCCESS,\n  FETCH_FAILURE\n} from '../constants/ActionTypes'\nimport _ from 'lodash'\nimport merge from 'deepmerge'\nimport {IPAD, APPLE_WATCH} from '../constants/PartNumbers'\n\nconst MODEL_REGEXP = {\n  [APPLE_WATCH]: /(?<model1>.*)\\s+(?<connectivity>GPS(?:.*Cellular)?)(?:\\W+)(?<size>[0-9]{2}mm)\\s+(?<model2>.+)/,\n  [IPAD]: /(?<size>[0-9.]+-inch)\\s+iPad Pro\\s+(?<connectivity>Wi-Fi(?:\\s+\\+\\s+Cellular)?)\\s+(?<storage>[0-9]+(G|T)B) - (?<color>.*)/,\n}\n\nexport default function partNumbers(state = {}, action) {\n  switch (action.type) {\n    case FETCH_SUCCESS:\n      let nextState = {...state}\n      const stores = action.data.stores\n      const product = action.product;\n      \n      stores.forEach((store) => {\n        // store.storeNumber\n        let availabilities = _.transform(store.partsAvailability, (list, availability, partNumber) => {\n          var matches = MODEL_REGEXP[product].exec(availability.storePickupProductTitle)\n\n          let {\n            model1,\n            connectivity,\n            size,\n            model2,\n            storage,\n            color,\n          } = matches.groups;\n\n          \n\n          let row;\n          switch (product) {\n            case IPAD:\n              row = {\n                [`iPad Pro - ${size} - ${color}`]: {\n                  [connectivity] : {\n                    [storage]: {\n                      partNumber,\n                      availabilities : {\n                        [store.storeNumber]: (\n                          availability.pickupDisplay === 'available'\n                        )\n                      }\n                    }\n                  }\n                }\n              };\n              break;\n            case APPLE_WATCH:\n              row = {\n                [`${model1} ${model2}`]: {\n                  [size] : {\n                    [connectivity]: {\n                      partNumber,\n                      availabilities : {\n                        [store.storeNumber]: (\n                          availability.pickupDisplay === 'available'\n                        )\n                      }\n                    }\n                  }\n                }\n              };\n              break;\n          }\n\n          list.push({[product]: row});\n        }, []);\n\n        nextState = merge.all([nextState, ...availabilities])\n      })\n\n      return nextState\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport partNumbers from './partNumbers'\nimport shops from './shops'\nimport isLoading from './isLoading'\n\nconst rootReducer = combineReducers({ partNumbers, shops, isLoading })\n\nexport default rootReducer\n","import {\n  FETCH_BEGIN,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n} from '../constants/ActionTypes'\n\nexport default function shops (state = {}, action) {\n  switch (action.type) {\n    case FETCH_SUCCESS:\n      const data = action.data\n      const shops = data.stores.reduce(\n        (obj, store) => {\n          let {storeName} = store;\n          obj[store.storeNumber] = {storeName}\n          return obj;\n        },\n        {}\n      )\n      return {...state, ...shops}\n    default:\n      return state\n  }\n}\n","import {\n  FETCH_BEGIN,\n  FETCH_SUCCESS,\n  FETCH_FAILURE\n} from '../constants/ActionTypes'\n\nexport default function isLoading (state = false, action) {\n  switch (action.type) {\n    case FETCH_BEGIN:\n      return false\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore (preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(\n      thunkMiddleware,\n      loggerMiddleware\n    )\n  )\n}\n","import React from 'react'\nimport { Table, Icon } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nconst PartRow = ({ model, shopKeys, sizes }) =>\n  (\n    <Table.Body>\n      {\n        _.map(sizes, (connectivities, size) => (\n          _.map(connectivities, (parts, connectivity) => (\n            <Table.Row>\n              {\n                (\n                  (size === Object.keys(sizes)[0]) &&\n                  (connectivity === Object.keys(connectivities)[0])\n                ) && <Table.Cell rowSpan={_.reduce(sizes, (acc,v,k) =>\n                  acc + _.reduce(v, (acc2,v2,k2) => acc2 + 1, 0)\n                ,0)}>{model}</Table.Cell>\n              }\n\n              {\n                (connectivity === Object.keys(connectivities)[0])\n                &&\n                <Table.Cell rowSpan={Object.keys(connectivities).length}>{size}</Table.Cell>\n              }\n              <Table.Cell>{connectivity}</Table.Cell>\n              <Table.Cell>{parts.partNumber}</Table.Cell>\n\n              {\n                shopKeys.map((shopKey) => (\n                  <Table.Cell key={`40mm_celluar_${model}_${shopKey}`} textAlign='center'>\n                    {\n                      parts.availabilities[shopKey] &&\n                      <Icon color='green' name='checkmark' size='large' />\n                    }\n                  </Table.Cell>\n                ))\n              }\n            </Table.Row>\n          ))\n        ))\n      }\n    </Table.Body>\n  )\n\nexport default PartRow\n","import React from 'react'\nimport { Grid, Table } from 'semantic-ui-react'\nimport PartRow from './PartRow'\nimport _ from 'lodash'\n\nconst AvailabilityGrid = ({ products, shops }) =>\n  (\n    <Grid>\n      {\n        _.map(products, (partNumbers, product) => (\n          <Grid.Row>\n            <Grid.Column>\n              <h1>{product}</h1>\n              <Table celled structured>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell rowSpan='2'>Model</Table.HeaderCell>\n                    <Table.HeaderCell rowSpan='2'>Size</Table.HeaderCell>\n                    <Table.HeaderCell rowSpan='2'>Connectivity</Table.HeaderCell>\n                    <Table.HeaderCell rowSpan='2'>Part Number</Table.HeaderCell>\n                    <Table.HeaderCell colSpan={Object.keys(shops).length}>Retail Shops</Table.HeaderCell>\n                  </Table.Row>\n                  <Table.Row>\n                    {\n                      Object.keys(shops).map((shopKey) => (\n                        <Table.HeaderCell key={shopKey}>{shops[shopKey].storeName}</Table.HeaderCell>\n                      ))\n                    }\n                  </Table.Row>\n                </Table.Header>\n\n                {\n                  Object.keys(partNumbers).map((partNumber) => (\n                    <PartRow\n                      model={partNumber}\n                      shopKeys={Object.keys(shops)}\n                      sizes={partNumbers[partNumber]}\n                    />\n                  ))\n                }\n              </Table>\n            </Grid.Column>\n          </Grid.Row>\n        ))\n      }\n    </Grid>\n  )\n\nexport default AvailabilityGrid\n","import { connect } from 'react-redux'\nimport AvailabilityGrid from '../components/AvailabilityGrid'\n\nconst mapStateToProps = (state, ownProps) => ({\n  shops: state.shops,\n  products: state.partNumbers\n})\n\nexport default connect(mapStateToProps)(AvailabilityGrid)\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Container, Divider, Header, Icon, Loader }\n  from 'semantic-ui-react'\nimport AvailabilityGrid from '../containers/AvailabilityGrid'\n\nexport default class App extends Component {\n  componentDidMount(){\n  \tthis.props.onActivate()\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as='h2' icon inverted textAlign='center'>\n\n          <Icon name='apple' />\n            Apple Watch Availability (HK)\n        </Header>\n\n        <Divider />\n\n        <Loader content='Loading' active={this.props.isLoading} />\n\n        <AvailabilityGrid />\n\n      </Container>\n    )\n  }\n}\n","import * as types from '../constants/ActionTypes'\nimport fetch from 'cross-fetch'\n\nexport const fetchBegin = () => ({ type: types.FETCH_BEGIN })\nexport const fetchSuccess = (product, data) => ({ type: types.FETCH_SUCCESS, product, data })\nexport const fetchFailure = (err) => ({ type: types.FETCH_FAILURE, err })\n\nexport function fetchAvailability (product, partNumbers) {\n  return dispatch => {\n    dispatch(fetchBegin())\n    const params = partNumbers\n      .map((partNumber, idx) => (`parts.${idx}=${encodeURIComponent(partNumber)}`))\n      .join('&')\n\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://www.apple.com/hk/shop/retail/pickup-message?location=Central&${params}&pl=true`\n    )\n      .then(response => response.json())\n      .then(json => json.body)\n      .then(json => dispatch(fetchSuccess(product, json)))\n  }\n}\n\n// export function fetchAvailabilityIfNeeded (partNumber) {\n//   return (dispatch, getState) => {\n//     return dispatch(fetchAvailability(partNumber))\n//   }\n// }\n","import { connect } from 'react-redux'\nimport App from '../components/App'\nimport {fetchAvailability} from '../actions'\nimport {ALL_PART_NUMBERS} from '../constants/PartNumbers'\nimport _ from 'lodash'\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onActivate: () => {\n    _.each(ALL_PART_NUMBERS, (productPartNumbers, product) => {\n      _.chunk(productPartNumbers, 6).forEach((partNumbers) => {\n        dispatch(fetchAvailability(product, partNumbers));\n      })\n    })\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from '../configureStore'\nimport App from './App'\n\nconst store = configureStore()\n\nexport default class Root extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './containers/Root'\nimport registerServiceWorker from './registerServiceWorker'\nimport './index.css'\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}